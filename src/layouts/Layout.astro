---
import '../styles/global.css'
import Header from '@/components/Header.astro'

interface Props {
  title?: string
	header?: boolean
	noIndex?: boolean
}

const {
	title,
	header=true,
	noIndex=false,
} = Astro.props
---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<title>{title || 'RedeemZone'}</title>
		{
			!noIndex &&
			<meta name="robots" content="noindex" />
		}
	</head>
	<body>
		{
			header &&
			<Header />
		}
		<slot />
	</body>
</html>

<style is:global>
	@reference "../styles/global.css";

	@font-face {
		font-family: 'ZenDots';
		font-style: normal;
		font-weight: 400;
		font-display: swap;
		src: url('/fonts/ZenDots-Regular.woff2') format('woff2');
	}

	::-webkit-scrollbar {
		width: 5px;
	}
	::-webkit-scrollbar-thumb {
		background: var(--border);
    border-radius: 5px;
	}
	::-webkit-scrollbar-track {
		background: transparent;
	}

	* {
		scrollbar-width: thin;
    scrollbar-color: var(--border) transparent;
	}

	html,
	body {
		width: 100%;
		height: 100%;
		@apply flex flex-col;
	}

	body[data-scroll-locked] {
		padding-right: 10px !important;
	}

	button {
		@apply cursor-pointer;
	}
</style>

<script is:inline>
	const getThemePreference = () => {
		if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
			return localStorage.getItem('theme');
		}
		return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';
	};
	const isDark = getThemePreference() === 'dark';
	document.documentElement.classList[isDark ? 'add' : 'remove']('dark');
 
	if (typeof localStorage !== 'undefined') {
		const observer = new MutationObserver(() => {
			const isDark = document.documentElement.classList.contains('dark');
			localStorage.setItem('theme', isDark ? 'dark' : 'light');
		});
		observer.observe(document.documentElement, { attributes: true, attributeFilter: ['class'] });
	}
</script>